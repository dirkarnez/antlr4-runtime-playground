name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'
      
jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    env:
      libraryName: antlr4-runtime-playground
      tagName: v1.0.0
      mingwTargetZip: antlr4-runtime-playground-${{ github.ref_name }}-winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4.zip
    steps:
        - uses: actions/checkout@v3
        
        - uses: actions/setup-java@v2
          with:
            distribution: 'adopt'
            java-version: '11'
            
        - name: curl cmake-3.22.2-windows-x86_64.zip
          shell: cmd
          run: |
            curl https://github.com/dirkarnez/antlr4-runtime-prebuilt/releases/download/v4.11.1/antlr4-runtime-v4.11.1-winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4.zip -L -O -J &&^
            dir &&^
            7z.exe x antlr4-runtime-v4.11.1-winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4.zip -o"antlr4-runtime-v4.11.1-winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4"
            
        - name: curl cmake-3.22.2-windows-x86_64.zip
          shell: cmd
          run: |
            curl https://github.com/Kitware/CMake/releases/download/v3.22.2/cmake-3.22.2-windows-x86_64.zip -L --output cmake-3.22.2-windows-x86_64.zip &&^
            dir &&^
            7z.exe x cmake-3.22.2-windows-x86_64.zip
          
        - name: curl x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
          shell: cmd
          run:  |
            curl https://github.com/brechtsanders/winlibs_mingw/releases/download/12.2.0-15.0.7-10.0.0-ucrt-r4/winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4.zip -L -O -J &&^
            7z.exe x winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4.zip
            
        - name: set PATH, check mingw version, cmake generate, build and install
          shell: cmd
          run: |
            set JAVA_HOME=%JAVA_HOME_11_X64%
            set PATH=^
            ${{ github.workspace }}\mingw64;^
            ${{ github.workspace }}\mingw64\bin;^
            ${{ github.workspace }}\PortableGit-2.38.1-64-bit\bin;^
            ${{ github.workspace }}\cmake-3.22.2-windows-x86_64\bin;^
            ${{ github.workspace }}\OpenJDK16U-jdk_x64_windows_hotspot_16.0.2_7\jdk-16.0.2+7\bin;^
            %JAVA_HOME%;^
            %JAVA_HOME%\bin;^
            C:\Windows\System32;
            set CD_LINUX=%CD:\=/%
            gcc --version &&^
            java --version &&^
            cmake.exe -G "MinGW Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DBUILD_SHARED_LIBS=OFF ^
            -Dantlr4-generator_DIR="%CD_LINUX%/antlr4-runtime-v4.11.1-winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4/lib/cmake/antlr4-generator" ^
            -Dantlr4-runtime_DIR="%CD_LINUX%/antlr4-runtime-v4.11.1-winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4/lib/cmake/antlr4-runtime" ^
            -B./cmake-build &&^
            cd cmake-build &&^
            cmake --build .
            
        - name: Archive Release
          uses: thedoctor0/zip-release@master
          with:
            type: 'zip'
            directory: "cmake-build"
            path: antlr4-runtime-playground.exe
            filename: "${{ env.mingwTargetZip }}"
            
        - name: Release prebuilt
          uses: ncipollo/release-action@v1
          with:
            artifacts: "cmake-build/${{ env.mingwTargetZip }}"
            allowUpdates: true
            token: ${{ secrets.GITHUB_TOKEN }}     
